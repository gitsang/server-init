#!/bin/bash

case "$1" in
    "help"|"-h")
        echo "usage: trash [ clean(-c) | recover(-r) | backup(-b) | help(-h) ]"
        ;;
    "recover"|"-r")
        shift
        TRASH_DIR=~/.trash
        REAL_PATH=`echo $@ | awk -F'-%TRASH%-' '{print $2}' | sed 's/##/\//g'`

        if [ -f "$REAL_PATH" ]; then
            echo "file exist: $REAL_PATH"
        elif [ -d "$REAL_PATH" ]; then
            echo "folder exist: $REAL_PATH"
        else
            mv $@ $REAL_PATH
            echo "recover $@ to $REAL_PATH"
        fi
        ;;
    "clean"|"-c")
        TRASH_DIR=~/.trash
        MAX_TRASH_SIZE=20000000
        TRASH_SIZE=`du --max-depth=0 $TRASH_DIR | awk '{print $1}'`

        while [ $TRASH_SIZE -gt $MAX_TRASH_SIZE ]
        do
            echo "trash-size: $TRASH_SIZE > $MAX_TRASH_SIZE clean up:" && ls $TRASH_DIR | grep -v total | head -1
            ls $TRASH_DIR | grep -v total | head -1 | xargs -i -n1 rm -fr $TRASH_DIR/{}
            TRASH_SIZE=`du --max-depth=0 $TRASH_DIR | awk '{print $1}'`
        done
        echo "trash-size: $TRASH_SIZE"
        ;;
    "backup"|"-b")
        BACKUP_DIR=~/.trash
        REAL_PATH=`realpath $2`
        BACKUP_NAME=`realpath $2 | sed 's/\//##/g'`
        TIME=`date "+%Y%m%d-%H%M%S"`
        BACKUP_PATH=$BACKUP_DIR/$TIME-%BACKUP%-$BACKUP_NAME

        if [ "$REAL_PATH" != "/" ]; then
            mkdir -p $BACKUP_DIR
            cp -r $REAL_PATH $BACKUP_PATH
            echo "backup $REAL_PATH to $BACKUP_PATH"
        fi
        ;;
    *)
        TRASH_DIR=~/.trash
        for input in ${@[@]}; do
            REAL_PATH=`realpath $input`
            TRASH_NAME=`realpath $input | sed 's/\//##/g'`
            TIME=`date "+%Y%m%d-%H%M%S"`
            TRASH_PATH=$TRASH_DIR/$TIME-%TRASH%-$TRASH_NAME

            if [ "$REAL_PATH" != "/" ]; then
                mkdir -p $TRASH_DIR
                mv $REAL_PATH $TRASH_PATH
                echo "del $REAL_PATH to $TRASH_PATH"
            fi
        done
        ;;
esac
